openapi: 3.0.0
info:
  version: 0.0.1
  title: Swagger Todos
  license:
    name: MIT
servers:
  - url: https://vw3mtdrx3f.execute-api.ap-southeast-1.amazonaws.com/v1/
paths:
  /swagger:
    get:
      summary: Swagger specification
      operationId: swagger
      responses:
        "200":
          description: A portal of Swagger UI
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /swagger.css:
    get:
      summary: Swagger specification
      operationId: swagger
      responses:
        "200":
          description: A portal of Swagger UI
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /swagger.js:
    get:
      summary: Swagger specification
      operationId: swagger
      responses:
        "200":
          description: A portal of Swagger UI
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /health:
    get:
      summary: Health check
      operationId: health
      tags:
        - system
      responses:
        "200":
          description: A health check successful response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /todos:
    get:
      summary: List all todos
      operationId: listTodos
      tags:
        - todos
      responses:
        "200":
          description: A paged array of todos
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todos"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        httpMethod: POST
        type: aws_proxy
    post:
      summary: Create todo
      operationId: createTodo
      tags:
        - todos
      responses:
        "200":
          description: A newly created todo
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    format: int64
                  title:
                    type: string
                  completed:
                    type: boolean
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        httpMethod: POST
        type: aws_proxy
  /todos/{todo_id}:
    get:
      summary: Get a specific todo by given todo_id
      operationId: getTodo
      tags:
        - todos
      responses:
        "200":
          description: A todo information
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: ${invoke_arn}
        httpMethod: POST
        type: aws_proxy
components:
  schemas:
    Todo:
      type: object
      required:
        - id
        - userId
        - title
        - completed
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        title:
          type: string
        completed:
          type: boolean
    Todos:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/Todo"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
